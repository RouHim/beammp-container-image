# This builds the latest PreRelease version of beammp
name: PreRelease Release Pipe
on:
  push:
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab
  pull_request:
    types:
      - opened
  schedule:
    - cron: "0 0 * * 0" # weekly at sunday night

env:
  CONTAINER_FILE: container-data/Containerfile
  IMAGE_NAME: rouhim/beammp-server
  IMAGE_TAG: prerelease

jobs:

  build-test-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build container image
        uses: docker/build-push-action@v6
        with:
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          platforms: linux/amd64
          context: container-data
          file: ${{ env.CONTAINER_FILE }}
          build-args: |
            PRE_RELEASE=true
          load: true
          push: false

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: image
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Test the built image
        env:
          BEAMMP_AUTH_KEY: ${{ secrets.BEAMMP_AUTH_KEY }}
        run: |
          mkdir client-mods server-mods
          chmod 777 client-mods server-mods
          cp .env.example .env 
          timeout 1m bash test-image.sh ${{ env.IMAGE_TAG }}

      - name: Build and push multiplatform container image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          platforms: linux/amd64,linux/arm64
          context: container-data
          file: ${{ env.CONTAINER_FILE }}
          build-args: |
            PRE_RELEASE=true
          load: false
          push: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: image
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: 'trivy-results.sarif'